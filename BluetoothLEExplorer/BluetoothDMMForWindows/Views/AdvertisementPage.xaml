<Page x:Class="BluetoothLEExplorer.Views.AdvertisementPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:Behaviors="using:Template10.Behaviors"
      xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
      xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
      xmlns:controls="using:Template10.Controls"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:local="using:BluetoothLEExplorer.Views"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:converters="using:Template10.Converters"
      xmlns:myconverters="using:BluetoothLEExplorer.Services.Converters"
      xmlns:vm="using:BluetoothLEExplorer.ViewModels" x:Name="ThisPage"
      xmlns:models="using:BluetoothLEExplorer.Models" 
      mc:Ignorable="d">

    <Page.DataContext>
        <vm:AdvertisementPageViewModel x:Name="ViewModel" />
    </Page.DataContext>
    
    <Page.Resources>
        <converters:ValueWhenConverter x:Key="VisibleWhenBlankConverter" When="">
            <converters:ValueWhenConverter.Value>
                <Visibility>Collapsed</Visibility>
            </converters:ValueWhenConverter.Value>
            <converters:ValueWhenConverter.Otherwise>
                <Visibility>Visible</Visibility>
            </converters:ValueWhenConverter.Otherwise>
        </converters:ValueWhenConverter>

        <converters:ValueWhenConverter x:Key="VisibleWhenTrueConverter">
            <converters:ValueWhenConverter.When>
                <x:Boolean>True</x:Boolean>
            </converters:ValueWhenConverter.When>
            <converters:ValueWhenConverter.Value>
                <Visibility>Visible</Visibility>
            </converters:ValueWhenConverter.Value>
            <converters:ValueWhenConverter.Otherwise>
                <Visibility>Collapsed</Visibility>
            </converters:ValueWhenConverter.Otherwise>
        </converters:ValueWhenConverter>

        <local:BackgroundColorConverter x:Key="BackgroundColorConverter"/>
    </Page.Resources>

    <RelativePanel Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="AdaptiveVisualStateGroup">
                <VisualState x:Name="VisualStateNarrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NarrowMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for narrow view  -->
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateNormal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NormalMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for normal view  -->
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateWide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource WideMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for wide view  -->
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <!--  header  -->
        <controls:PageHeader x:Name="pageHeader" Frame="{x:Bind Frame}"
                             RelativePanel.AlignLeftWithPanel="True"
                             RelativePanel.AlignRightWithPanel="True"
                             RelativePanel.AlignTopWithPanel="True" Text="Selected Advertisement" />

        <!--  content  -->
        <Grid RelativePanel.Below="pageHeader" Padding="10" RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"  />
                <RowDefinition Height="*"  />
            </Grid.RowDefinitions>

            <StackPanel Grid.Row="0">
                <TextBlock>
                    <Run Text="Address: " FontWeight="Bold"/>
                    <Run Text="{x:Bind ViewModel.Advertisement.AddressAsString, Mode=OneTime}"/>
                </TextBlock>
                <TextBlock>
                    <Run Text="Address Type: " FontWeight="Bold"/>
                    <Run Text="{x:Bind ViewModel.Advertisement.AddressType, Mode=OneTime}" />
                </TextBlock>
                <TextBlock>
                    <Run Text="Advertisement Type: " FontWeight="Bold"/>
                    <Run Text="{x:Bind ViewModel.Advertisement.Type, Mode=OneTime}" />
                </TextBlock>
                <TextBlock>
                    <Run Text="Rssi: " FontWeight="Bold"/>
                    <Run Text="{x:Bind ViewModel.Advertisement.Rssi, Mode=OneWay}"/>
                </TextBlock>
                <TextBlock>
                    <Run Text="TxPower: " FontWeight="Bold"/>
                    <Run Text="{x:Bind ViewModel.Advertisement.TxPower, Mode=OneWay}"/>
                </TextBlock>
                <TextBlock>
                    <Run Text="Anonymous: " FontWeight="Bold"/>
                    <Run Text="{x:Bind ViewModel.Advertisement.Anonymous, Mode=OneTime}"/>
                </TextBlock>
                <TextBlock>
                    <Run Text="Connectable: " FontWeight="Bold"/>
                    <Run Text="{x:Bind ViewModel.Advertisement.Connectable, Mode=OneTime}"/>
                </TextBlock>
                <TextBlock>
                    <Run Text="Directed: " FontWeight="Bold"/>
                    <Run Text="{x:Bind ViewModel.Advertisement.Directed, Mode=OneTime}"/>
                </TextBlock>
                <TextBlock>
                    <Run Text="Scannable: " FontWeight="Bold"/>
                    <Run Text="{x:Bind ViewModel.Advertisement.Scannable, Mode=OneTime}"/>
                </TextBlock>
                <TextBlock>
                    <Run Text="Scan Response: " FontWeight="Bold"/>
                    <Run Text="{x:Bind ViewModel.Advertisement.ScanResponse, Mode=OneTime}"/>
                </TextBlock>
                <TextBlock>
                    <Run Text="Section Count: " FontWeight="Bold"/>
                    <Run Text="{x:Bind ViewModel.Advertisement.DataSections.Count, Mode=OneTime}"/>
                </TextBlock>
            </StackPanel>
            <ScrollViewer Grid.Row="2" Margin="0,10,0,0" ScrollViewer.VerticalScrollBarVisibility="Auto">
                <ItemsControl 
                    x:Name="DataSectionsListView"
                    ItemsSource="{x:Bind ViewModel.Advertisement.DataSections, Mode=OneWay}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate x:DataType="models:ObservableBluetoothLEAdvertisementSection" >
                            <StackPanel Margin="0,0,0,15">
                                <TextBlock>
                                    <Run Text="Section Type: " FontWeight="Bold"/>
                                    <Run Text="{x:Bind TypeAsDisplayString}" />
                                    <Run Text=" (" />
                                    <Run Text="{x:Bind TypeAsString}" />
                                    <Run Text=")" />
                                </TextBlock>
                                <TextBlock>
                                    <Run Text="Section Data: " FontWeight="Bold"/>
                                    <Run Text="{x:Bind DataAsDisplayString}" />
                                    <Run Text=" ("/>
                                    <Run Text="{x:Bind DataAsString}" />
                                    <Run Text=")" />
                                </TextBlock>
                            </StackPanel>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ScrollViewer>
        </Grid>
    </RelativePanel>
</Page>
